name: 'Start Coder Workspace'
description: 'Starts a Coder workspace. Posts a comment to a GitHub issue with the workspace URL.'
inputs:
  github-token:
    description: 'GitHub token'
    required: false
    default: ${{ github.token }}
  github-issue-number:
    description: 'GitHub issue number where progress updates will be posted'
    required: true
  github-username:
    description: 'GitHub username of the user for whom the workspace is being started'
    required: false
  coder-username:
    description: 'Coder username'
    required: false
  coder-url:
    description: 'Coder URL'
    required: true
  coder-token:
    description: 'Coder token'
    required: true
  template-name:
    description: 'Coder template name'
    required: true
  workspace-name:
    description: 'Coder workspace name'
    required: true
  parameters:
    description: 'YAML dictionary of parameters for the Coder workspace'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Initial comment
      id: initial-comment
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const issueNumber = Number('${{ inputs.github-issue-number }}');
          const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
          const comment = await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            body: `üîÑ Starting a Coder workspace. You can track the progress [here](${runUrl}).`
          });
          core.setOutput('comment_id', comment.data.id);
          core.setOutput('run_url', runUrl);
          core.setOutput('repo_owner', context.repo.owner);
          core.setOutput('repo_name', context.repo.repo);

    - name: Start workspace
      shell: bash
      env:
        GITHUB_USERNAME: ${{ inputs.github-username }}
        CODER_USERNAME: ${{ inputs.coder-username }}
        CODER_URL: ${{ inputs.coder-url }}
        CODER_TOKEN: ${{ inputs.coder-token }}
        WORKSPACE_NAME: ${{ inputs.workspace-name }}
        GITHUB_STATUS_COMMENT_ID: ${{ steps.initial-comment.outputs.comment_id }}
        GITHUB_REPO_OWNER: ${{ steps.initial-comment.outputs.repo_owner }}
        GITHUB_REPO_NAME: ${{ steps.initial-comment.outputs.repo_name }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GITHUB_WORKFLOW_RUN_URL: ${{ steps.initial-comment.outputs.run_url }}
        TEMPLATE_NAME: ${{ inputs.template-name }}
        WORKSPACE_PARAMETERS: ${{ inputs.parameters }}
      run: |
        node "${{ github.action_path }}/dist/index.js"

    - name: Comment failure
      if: always() && (failure() || cancelled())
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const commentId = Number('${{ steps.initial-comment.outputs.comment_id }}');
          const runUrl = '${{ steps.initial-comment.outputs.run_url }}';
          const errorMsg = process.env["ERROR_MSG"];
          await github.rest.issues.updateComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: commentId,
            body: "‚ùå " + (errorMsg ?? `Failed to start the workspace. Please check the [action logs](${runUrl}) for details.`)
          });
